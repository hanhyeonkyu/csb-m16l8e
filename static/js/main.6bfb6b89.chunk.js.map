{"version":3,"sources":["App.js","index.js"],"names":["App","useState","data","setData","fetchData","A","document","getElementById","value","B","C","fetch","res","json","className","onClick","id","type","defaultValue","Fragment","style","display","flex","textAlign","fontSize","fontWeight","rnd","length","map","rd","idx","picked","pi","total","rootElement","createRoot","render"],"mappings":"8NA4HeA,EAzHH,WACV,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAS,iDAAG,6GACVC,EAAIC,SAASC,eAAe,KAAKC,MACjCC,EAAIH,SAASC,eAAe,KAAKC,MACjCE,EAAIJ,SAASC,eAAe,KAAKC,MAHvB,SAIEG,MAAM,wDAAD,OACmCN,EADnC,YACwCI,EADxC,YAC6CC,IALpD,cAIVE,EAJU,gBAOGA,EAAIC,OAPP,OAOVX,EAPU,OAQhBC,EAAQD,GARQ,4CAAH,qDAaf,OACE,sBAAKY,UAAU,MAAf,UACE,0DACA,wBAAQC,QANS,WACnBX,KAKE,oBACA,4BACE,uCACK,uBAAOY,GAAG,IAAIC,KAAK,SAASC,aAAc,SAGjD,4BACE,uCACK,uBAAOF,GAAG,IAAIC,KAAK,UAAUC,aAAc,SAGlD,4BACE,uCACK,uBAAOF,GAAG,IAAIC,KAAK,UAAUC,aAAc,SAGjDhB,GACC,cAAC,IAAMiB,SAAP,UACE,sBAAKC,MAAO,CAAEC,QAAS,QAAvB,UACE,sBAAKD,MAAO,CAAEE,KAAM,GAApB,UACE,oBACEF,MAAO,CACLG,UAAW,OACXC,SAAU,OACVC,WAAY,QAJhB,uCAOSvB,EAAKwB,IAAIC,OAASzB,EAAKwB,IAAIC,OAAS,EAP7C,OASA,kCACE,kCACE,wCACA,8CACA,8CACA,iDAEF,gCACGzB,EAAKwB,IAAIC,QACRzB,EAAKwB,IAAIE,KAAI,SAACC,EAAIC,GAChB,OACE,+BACE,6BAAKD,EAAE,IACP,6BAAKA,EAAE,IACP,6BAAKA,EAAE,IACP,6BAAKA,EAAE,MAJAC,cAWrB,sBAAKV,MAAO,CAAEE,KAAM,GAApB,UACE,oBACEF,MAAO,CACLG,UAAW,OACXC,SAAU,OACVC,WAAY,QAJhB,wFAQGvB,EAAK6B,OAAOJ,OAASzB,EAAK6B,OAAOJ,OAAS,EAR7C,OAUA,kCACE,kCACE,wCACA,8CACA,8CACA,iDAEF,gCACGzB,EAAK6B,OAAOJ,QACXzB,EAAK6B,OAAOH,KAAI,SAACI,EAAIF,GACnB,OACE,+BACE,6BAAKE,EAAE,IACP,6BAAKA,EAAE,IACP,6BAAKA,EAAE,IACP,6BAAKA,EAAE,MAJAF,cAYrB,gCACE,mBACEV,MAAO,CACLG,UAAW,OACXC,SAAU,OACVC,WAAY,QAJhB,oDASCvB,EAAK+B,kBC/GdC,EAAc5B,SAASC,eAAe,QAC/B4B,qBAAWD,GAEnBE,OACH,cAAC,aAAD,UACE,cAAC,EAAD,S","file":"static/js/main.6bfb6b89.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\n\nconst App = () => {\n  const [data, setData] = useState(null);\n  const fetchData = async () => {\n    const A = document.getElementById(\"A\").value;\n    const B = document.getElementById(\"B\").value;\n    const C = document.getElementById(\"C\").value;\n    const res = await fetch(\n      `https://python-fastapi-app.herokuapp.com/combination/${A}/${B}/${C}`\n    );\n    const data = await res.json();\n    setData(data);\n  };\n  const handleRandom = () => {\n    fetchData();\n  };\n  return (\n    <div className=\"App\">\n      <h2>Combination Optimization</h2>\n      <button onClick={handleRandom}>random</button>\n      <p>\n        <span>\n          A: <input id=\"A\" type=\"number\" defaultValue={0} />\n        </span>\n      </p>\n      <p>\n        <span>\n          B: <input id=\"B\" type=\"numeric\" defaultValue={0} />\n        </span>\n      </p>\n      <p>\n        <span>\n          C: <input id=\"C\" type=\"numeric\" defaultValue={0} />\n        </span>\n      </p>\n      {data && (\n        <React.Fragment>\n          <div style={{ display: \"flex\" }}>\n            <div style={{ flex: 1 }}>\n              <p\n                style={{\n                  textAlign: \"left\",\n                  fontSize: \"1rem\",\n                  fontWeight: \"bold\"\n                }}\n              >\n                조합 재료({data.rnd.length ? data.rnd.length : 0})\n              </p>\n              <table>\n                <thead>\n                  <th>힘</th>\n                  <th>민첩</th>\n                  <th>지능</th>\n                  <th>가격</th>\n                </thead>\n                <tbody>\n                  {data.rnd.length &&\n                    data.rnd.map((rd, idx) => {\n                      return (\n                        <tr key={idx}>\n                          <td>{rd[\"A\"]}</td>\n                          <td>{rd[\"B\"]}</td>\n                          <td>{rd[\"C\"]}</td>\n                          <td>{rd[\"D\"]}</td>\n                        </tr>\n                      );\n                    })}\n                </tbody>\n              </table>\n            </div>\n            <div style={{ flex: 1 }}>\n              <p\n                style={{\n                  textAlign: \"left\",\n                  fontSize: \"1rem\",\n                  fontWeight: \"bold\"\n                }}\n              >\n                충족가능 최저금액 조합결과(\n                {data.picked.length ? data.picked.length : 0})\n              </p>\n              <table>\n                <thead>\n                  <th>힘</th>\n                  <th>민첩</th>\n                  <th>지능</th>\n                  <th>가격</th>\n                </thead>\n                <tbody>\n                  {data.picked.length &&\n                    data.picked.map((pi, idx) => {\n                      return (\n                        <tr key={idx}>\n                          <td>{pi[\"A\"]}</td>\n                          <td>{pi[\"B\"]}</td>\n                          <td>{pi[\"C\"]}</td>\n                          <td>{pi[\"D\"]}</td>\n                        </tr>\n                      );\n                    })}\n                </tbody>\n              </table>\n            </div>\n\n            <div>\n              <p\n                style={{\n                  textAlign: \"left\",\n                  fontSize: \"1rem\",\n                  fontWeight: \"bold\"\n                }}\n              >\n                최적 조합 가격\n              </p>\n              {data.total}\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\nexport default App;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}